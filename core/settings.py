"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from django.urls import reverse_lazy


import os
import environ

import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(
    DATABASE_URL=(str, ""),
    PRODUCTION=(int, 0),
    SECRET_KEY=(str, "INSECURE-KEY"),
    MINIO_URL=(str, ""),
    MINIO_ACCESS_KEY=(str, ""),
    MINIO_SECRET_KEY=(str, ""),
    MINIO_ENDPOINT=(str, ""),
)
env.read_env(os.path.join(BASE_DIR, ".env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")
PRODUCTION = True if env("PRODUCTION") == 1 else False

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = not PRODUCTION

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "unfold",
    "unfold.contrib.filters",  # optional, if special filters are needed
    "unfold.contrib.forms",  # optional, if special form elements are needed
    "unfold.contrib.inlines",  # optional, if special inlines are needed
    "unfold.contrib.import_export",  # optional, if django-import-export package is used
    "unfold.contrib.guardian",  # optional, if django-guardian package is used
    "unfold.contrib.simple_history",
    # optional, if django-simple-history package is used # required
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework.authtoken",
    "phonenumber_field",
    "core",
    "customAuth",
    "examenes",
    "medicos",
    "usuarios",
    "corsheaders",
    "reportes",
]


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "core.urls"


CSRF_COOKIE_SECURE = False
CSRF_USE_SESSIONS = False

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ["templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "es-us"

TIME_ZONE = "America/Caracas"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# This setting informs Django of the URI path from which your static files will be served to users
# Here, they well be accessible at your-domain.onrender.com/static/... or yourcustomdomain.com/static/...

STATIC_ROOT = os.path.join(BASE_DIR / "static")


# This production code might break development mode, so we check whether we're in DEBUG mode

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


AUTH_USER_MODEL = "usuarios.Usuario"

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.TokenAuthentication",
    ),
}

PHONENUMBER_DEFAULT_REGION = "VE"


UNFOLD = {
    "SITE_TITLE": "Sistema Medico",
    "SITE_HEADER": "Sistema Medico",
    "SIDEBAR": {
        "show_search": False,  # Search in applications and models names
        "show_all_applications": False,  # Dropdown with all applications and models
        "navigation": [
            {
                "title": "Administracion",
                "separator": True,  # Top border
                "collapsible": False,  # Collapsible group of links
                "items": [
                    {
                        "title": "Inicio",
                        "icon": "dashboard",  # Supported icon set: https://fonts.google.com/icons
                        "link": reverse_lazy("admin:index"),
                        "permission": lambda request: request.user.is_superuser,
                    },
                    {
                        "title": "Usuarios",
                        "icon": "people",
                        "link": reverse_lazy("admin:usuarios_usuario_changelist"),
                        "permission": lambda request: request.user.is_superuser,
                    },
                ],
            },
            {
                "title": "Personas",
                "icon": "people",
                "separatror": True,
                "collapsible": True,
                "permission": lambda request: request.user.is_superuser,
                "items": [
                    {
                        "title": "Generos",
                        "icon": "wc",
                        "link": reverse_lazy("admin:usuarios_genero_changelist"),
                        "permission": lambda request: request.user.is_superuser,
                    },
                    {
                        "title": "Registros de Tension",
                        "icon": "monitor_heart",
                        "link": reverse_lazy("admin:usuarios_tension_changelist"),
                        "permission": lambda request: request.user.is_superuser,
                    },
                ],
            },
            {
                "title": "Medicos",
                "icon": "user",
                "separatror": True,
                "collapsible": True,
                "permission": lambda request: request.user.is_superuser,
                "items": [
                    {
                        "title": "Medicos",
                        "icon": "medical_services",
                        "link": reverse_lazy("admin:medicos_medico_changelist"),
                        "permission": lambda request: request.user.is_superuser,
                    },
                    {
                        "title": "Consultas",
                        "icon": "book",
                        "link": reverse_lazy("admin:medicos_consulta_changelist"),
                        "permission": lambda request: request.user.is_superuser,
                    },
                    {
                        "title": "Especialidades",
                        "icon": "book",
                        "link": reverse_lazy("admin:medicos_especialidad_changelist"),
                        "permission": lambda request: request.user.is_superuser,
                    },
                ],
            },
            {
                "title": "Ex√°menes",
                "icon": "user",
                "separatror": True,
                "collapsible": True,
                "permission": lambda request: request.user.is_superuser,
                "items": [
                    {
                        "title": "Examenes",
                        "icon": "description",
                        "link": reverse_lazy("admin:examenes_examen_changelist"),
                        "permission": lambda request: request.user.is_superuser,
                    },
                    {
                        "title": "Categorias",
                        "icon": "book",
                        "link": reverse_lazy("admin:examenes_categoria_changelist"),
                        "permission": lambda request: request.user.is_superuser,
                    },
                ],
            },
        ],
    },
    "TABS": [
        {
            "models": [
                "medicos.medico",
            ],
            "items": [
                {
                    "title": "adasdadasd",
                    "link": reverse_lazy("admin:medicos_medico_changelist"),
                },
            ],
        },
    ],
    "STYLES": [
        lambda request: "/static/css/styles.css",
    ],
}


X_FRAME_OPTIONS = "SAMEORIGIN"


MEDIA_URL = "/media/"
MEDIA_ROOT = Path(BASE_DIR / "media")


STORAGES = {
    "default": {"BACKEND": "minio_storage.storage.MinioMediaStorage"},
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

# MinIO
MINIO_STORAGE_ENDPOINT = env("MINIO_ENDPOINT")
MINIO_STORAGE_USE_HTTPS = PRODUCTION
MINIO_STORAGE_MEDIA_BUCKET_NAME = "backend-storage"
MINIO_STORAGE_AUTO_CREATE_MEDIA_BUCKET = True
MINIO_STORAGE_AUTO_CREATE_MEDIA_POLICY = "READ_ONLY"
MINIO_STORAGE_AUTO_CREATE_STATIC_BUCKET = True

# MinIO Credenciales
MINIO_STORAGE_ACCESS_KEY = env("MINIO_ACCESS_KEY")
MINIO_STORAGE_SECRET_KEY = env("MINIO_SECRET_KEY")


DATABASES = {
    "default": dj_database_url.config(
        conn_max_age=600,
        ssl_require=PRODUCTION,
        default=env("DATABASE_URL")
    ),
}

ALLOWED_HOSTS = ["*"]

X_FRAME_OPTIONS = "SAMEORIGIN"

XS_SHARING_ALLOWED_METHODS = ["POST", "GET", "OPTIONS", "PUT", "DELETE"]
CSRF_TRUSTED_ORIGINS = ["http://*", "https://*", "https://*.up.railway.app","https://medical-api.up.railway.app/"]